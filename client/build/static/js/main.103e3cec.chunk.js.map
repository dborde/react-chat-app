{"version":3,"sources":["components/Rooms.js","pages/join.js","utils/autoscroll.js","context/chat-context.js","utils/loader.js","components/MessageForm.js","components/Messages.js","reducers/messages.js","components/Users.js","components/SideBar.js","pages/chat.js","App.js","serviceWorker.js","index.js"],"names":["Rooms","props","Fragment","rooms","map","room","index","key","ActiveRooms","className","currentRoom","disabled","onClick","switchRoom","socket","io","withRouter","useState","setRooms","username","values","setValues","useEffect","on","off","onInputUpdate","e","target","name","value","placeholder","autoComplete","onChange","type","list","id","history","push","autoscroll","$messagesWrap","document","querySelector","$messages","$newMessage","lastElementChild","newMessageStyles","getComputedStyle","newMessageMargin","parseInt","marginBottom","newMessageHeight","offsetHeight","visibleHeight","scrollHeight","scrollTop","ChatContext","React","createContext","LoaderSkeleton","count","height","borderRadius","width","widthRandomness","color","MessageForm","useContext","handleSubmit","sendLocation","textInput","message","onSubmit","ref","alt","title","Messages","messages","obj","createdAt","url","href","rel","messagesReducer","state","action","data","Users","roomData","users","SideBar","isSideBarActive","toggleSideBar","positionStart","setPositionStart","positionEnd","setPositionEnd","swipe","getElementById","addEventListener","changedTouches","screenX","removeEventListener","Math","abs","style","window","innerHeight","useRef","useReducer","dispatchMessages","setDisabled","fetchingLocation","setFetchingLocation","setIsSideBarActive","setMessage","setRoomData","params","match","emit","error","alert","text","moment","format","current","focus","Provider","preventDefault","console","log","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","newroom","documentElement","clientHeight","App","site_loaded","this","setState","classNames","path","component","Chat","Join","Component","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.103e3cec.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Rooms = (props) => {\n  return (\n    <React.Fragment>\n      {props.rooms.map((room, index) =>\n        typeof room !== \"undefined\" ? <option key={index}>{room}</option> : null\n      )}\n    </React.Fragment>\n  );\n};\n\nexport const ActiveRooms = (props) => {\n  return (\n    <React.Fragment>\n      <h3 className=\"list-title\">Active Rooms</h3>\n      <ul className=\"rooms\">\n        {props.rooms.map((room, index) =>\n          typeof room !== \"undefined\" ? (\n            <li\n              className={`switch-room ${\n                props.currentRoom === room ? \"disabled\" : \"\"\n              }`}\n              key={index}\n            >\n              <button\n                disabled={props.currentRoom === room}\n                onClick={() => props.switchRoom(room)}\n              >\n                {room}\n              </button>\n            </li>\n          ) : null\n        )}\n      </ul>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport { Rooms } from \"../components/Rooms\";\n\nconst ENDPOINT =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://borde-react-chat-app.herokuapp.com/\"\n    : \"http://localhost:5000\";\nconst socket = io(ENDPOINT);\n\nconst Join = (props) => {\n  const [rooms, setRooms] = useState([]);\n  const [values, setValues] = useState({ room: \"\", username: \"\" });\n\n  useEffect(() => {\n    socket.on(\"roomsList\", ({ rooms }) => {\n      setRooms(rooms);\n    });\n  }, [rooms]);\n\n  useEffect(() => {\n    return () => socket.off(\"roomsList\");\n  }, []);\n\n  const onInputUpdate = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const join = () => {\n    const { username, room } = values;\n    if (username && room) {\n      props.history.push(`/chat/${username}/${room}`);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-xs\">\n        <form className=\"centered-form__box\">\n          <h2>Join</h2>\n          <input\n            name=\"username\"\n            placeholder=\"Display name\"\n            autoComplete=\"off\"\n            value={values.username}\n            onChange={onInputUpdate}\n          />\n          <input\n            type=\"text\"\n            list=\"rooms\"\n            name=\"room\"\n            placeholder=\"Room\"\n            autoComplete=\"off\"\n            value={values.room}\n            onChange={onInputUpdate}\n          />\n          <datalist id=\"rooms\">\n            <Rooms rooms={rooms} />\n          </datalist>\n          <button onClick={join} type=\"button\">\n            Join\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Join);\n","/**\n * has a dependency on components/Messages.js\n */\n\nexport const autoscroll = () => {\n  const $messagesWrap = document.querySelector(\"#messages\");\n  const $messages = document.querySelector(\"#messages div\");\n  // New message element\n  const $newMessage = $messages.lastElementChild;\n  if ($newMessage !== null) {\n    // Height of the new message\n    const newMessageStyles = getComputedStyle($newMessage);\n    const newMessageMargin = parseInt(newMessageStyles.marginBottom);\n    const newMessageHeight = $newMessage.offsetHeight + newMessageMargin;\n\n    // Visible height\n    const visibleHeight = $messagesWrap.offsetHeight;\n\n    // Height of messages container\n    const containerHeight = $messages.scrollHeight;\n\n    // How far have I scrolled\n    const scrollOffset = $messagesWrap.scrollTop + visibleHeight;\n\n    if (containerHeight - newMessageHeight <= scrollOffset) {\n      // scroll to bottom\n      $messagesWrap.scrollTop = $messagesWrap.scrollHeight;\n    }\n  }\n};\n","import React from \"react\";\n\nconst ChatContext = React.createContext();\n\nexport { ChatContext as default };\n","import React from \"react\";\n\nimport Skeleton from \"react-skeleton-loader\";\n\nconst LoaderSkeleton = ({ count = 1, height = \"3rem\" }) => (\n  <Skeleton\n    borderRadius={0}\n    width=\"100%\"\n    widthRandomness={0}\n    color=\"#d8d8d8\"\n    height={height}\n    count={count}\n  />\n);\n\nexport default LoaderSkeleton;\n","import React, { useContext } from \"react\";\nimport ChatContext from \"../context/chat-context\";\n\nconst MessageForm = () => {\n  const {\n    handleSubmit,\n    sendLocation,\n    onInputUpdate,\n    textInput,\n    message,\n    disabled,\n  } = useContext(ChatContext);\n\n  return (\n    <div className=\"compose\" onSubmit={(e) => handleSubmit(e)}>\n      <form id=\"message-form\">\n        <input\n          name=\"message\"\n          placeholder=\"Type your message...\"\n          autoComplete=\"off\"\n          value={message}\n          onChange={onInputUpdate}\n          ref={textInput}\n        />\n        <div className=\"btnWrap\">\n          <button disabled={disabled} type=\"submit\" className=\"btn\">\n            <i\n              className=\"tooltip fab fa-telegram-plane\"\n              alt=\"send message\"\n              title=\"send message\"\n            >\n              <span className=\"tooltiptext\">Send Message</span>\n            </i>\n          </button>\n          <button\n            disabled={disabled}\n            id=\"send-location\"\n            className=\"btn\"\n            onClick={(e) => sendLocation(e)}\n          >\n            <i\n              className=\"tooltip far fa-compass\"\n              alt=\"send location\"\n              title=\"send location\"\n            >\n              <span className=\"tooltiptext\">Send Location</span>\n            </i>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport { MessageForm as default };\n","import React, { useContext } from \"react\";\nimport ChatContext from \"../context/chat-context\";\n\n/**\n * messages id and child div are referenced in utils/autoscroll.js\n */\n\nconst Messages = () => {\n  const { messages } = useContext(ChatContext);\n\n  return (\n    <div id=\"messages\" className=\"chat__messages\">\n      <div>\n        {messages.map((obj, index) =>\n          typeof obj.username !== \"undefined\" ? (\n            <div key={index} className=\"message\">\n              <p>\n                <span className=\"message__name\">{obj.username}</span>\n                <span className=\"message__meta\">{obj.createdAt}</span>\n              </p>\n              {obj.url ? (\n                <p>\n                  <a href={obj.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    My current location\n                  </a>\n                </p>\n              ) : (\n                <p>{obj.message}</p>\n              )}\n            </div>\n          ) : null\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","const messagesReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_MESSAGES\":\n      return [\n        ...state,\n        action.data\n      ];\n    default:\n      return state;\n  }\n};\n\nexport { messagesReducer as default };\n","import React from \"react\";\n\nconst Users = (props) => {\n  const { users, room } = props.roomData;\n  return (\n    <React.Fragment>\n      <h2 className=\"room-title\">{room}</h2>\n      <h3 className=\"list-title\">Users</h3>\n      <ul className=\"users\">\n        {users.map((obj, index) => (\n          <li key={index}>{obj.username}</li>\n        ))}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport ChatContext from \"../context/chat-context\";\nimport Users from \"./Users\";\nimport { ActiveRooms } from \"./Rooms\";\n\nconst SideBar = () => {\n  const {\n    isSideBarActive,\n    rooms,\n    switchRoom,\n    roomData,\n    toggleSideBar\n  } = useContext(ChatContext);\n\n  const [positionStart, setPositionStart] = useState(0)\n  const [positionEnd, setPositionEnd] = useState(0)\n  \n  useEffect(() => {\n    const swipe = document.getElementById('sidebar');\n    swipe.addEventListener('touchstart', e => {\n      setPositionStart(e.changedTouches[0].screenX);\n    });\n    swipe.addEventListener('touchend', e => {\n      setPositionEnd(e.changedTouches[0].screenX);\n    });\n\n    return () => {\n      swipe.removeEventListener('touchstart', e => {\n        setPositionStart(e.changedTouches[0].screenX);\n      });\n      swipe.removeEventListener('touchend', e => {\n        setPositionEnd(e.changedTouches[0].screenX);\n      }); \n    }\n    \n  }, []);\n  \n  useEffect(() => {\n    if (positionEnd < positionStart && Math.abs(positionEnd - positionStart) > 70) {\n      toggleSideBar();\n    }\n  }, [positionEnd]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <React.Fragment>\n      <i\n        onClick={toggleSideBar}\n        className={`mobile-menu fas fa-bars ${isSideBarActive ? \"active\" : \"\"}`}\n      ></i>\n      <div\n        id=\"sidebar\"\n        className={`chat__sidebar ${isSideBarActive ? \"active\" : \"\"}`}\n        style={{ height: window.innerHeight }}\n      >\n        <div id=\"sidebar-users\">\n          <Users roomData={roomData} />\n        </div>\n        <div id=\"sidebar-rooms\">\n          <ActiveRooms\n            rooms={rooms}\n            currentRoom={roomData.room}\n            switchRoom={switchRoom}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport { SideBar as default };\n","import React, { useEffect, useState, useReducer } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\n\nimport { autoscroll } from \"../utils/autoscroll\";\nimport ChatContext from \"../context/chat-context\";\nimport LoaderSkeleton from \"../utils/loader\";\nimport MessageForm from \"../components/MessageForm\";\nimport Messages from \"../components/Messages\";\nimport messagesReducer from \"../reducers/messages\";\nimport SideBar from \"../components/SideBar\";\n\nconst ENDPOINT =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://borde-react-chat-app.herokuapp.com/\"\n    : \"http://localhost:5000\";\nconst socket = io(ENDPOINT);\n\nconst Chat = (props) => {\n  const textInput = React.useRef();\n  const [messages, dispatchMessages] = useReducer(messagesReducer, []);\n  const [disabled, setDisabled] = useState(false);\n  const [fetchingLocation, setFetchingLocation] = useState(false);\n  const [isSideBarActive, setIsSideBarActive] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [rooms, setRooms] = useState([]);\n  const [roomData, setRoomData] = useState({ room: \"\", users: [] });\n\n  useEffect(() => {\n    const params = {\n      username: props.match.params.username,\n      room: props.match.params.room,\n    };\n\n    socket.emit(\"join\", params, (error) => {\n      if (error) {\n        alert(error);\n        props.history.push(\"/\");\n      }\n    });\n\n    socket.on(\"roomData\", ({ room, users }) => {\n      setRoomData({ room, users });\n    });\n\n    socket.on(\"roomsList\", ({ rooms }) => {\n      setRooms(rooms);\n    });\n  }, [props.match.params.username, props.match.params.room, props.history]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      const data = {\n        username: message.username,\n        message: message.text,\n        createdAt: moment(message.createdAt).format(\"h:mm a\"),\n      };\n      textInput?.current && textInput.current.focus();\n      dispatchMessages({ type: \"SET_MESSAGES\", data });\n\n      autoscroll();\n    });\n\n    socket.on(\"locationMessage\", (message) => {\n      const data = {\n        username: message.username,\n        url: message.url,\n        createdAt: moment(message.createdAt).format(\"h:mm a\"),\n      };\n      dispatchMessages({ type: \"SET_MESSAGES\", data });\n\n      autoscroll();\n    });\n  }, []);\n\n  const toggleSideBar = () => {\n    setIsSideBarActive(!isSideBarActive);\n  };\n\n  const onInputUpdate = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const clearForm = () => {\n    setMessage(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setDisabled(true);\n    socket.emit(\"sendMessage\", message, (error) => {\n      setDisabled(false);\n      clearForm();\n\n      if (error) {\n        return console.log(error);\n      }\n    });\n  };\n\n  const switchRoom = (newroom) => {\n    const username = props.match.params.username;\n\n    socket.emit(\"switchRoom\", username, newroom);\n    props.history.push(`/chat/${username}/${newroom}`);\n  };\n\n  const sendLocation = (e) => {\n    e.preventDefault();\n    if (!navigator.geolocation) {\n      return alert(\"Geolocation is not supported by your browser.\");\n    }\n\n    setDisabled(true);\n    setFetchingLocation(true);\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      socket.emit(\n        \"sendLocation\",\n        {\n          lat: position.coords.latitude,\n          long: position.coords.longitude,\n        },\n        () => {\n          setDisabled(false);\n          setFetchingLocation(false);\n        }\n      );\n    });\n  };\n\n  return (\n    <ChatContext.Provider\n      value={{\n        disabled,\n        handleSubmit,\n        isSideBarActive,\n        onInputUpdate,\n        message,\n        messages,\n        roomData,\n        rooms,\n        sendLocation,\n        switchRoom,\n        textInput,\n        toggleSideBar\n      }}\n    >\n      <div className=\"chat\" style={{ height: window.innerHeight }}>\n        <SideBar />\n        <div\n          className={`chat__main ${isSideBarActive ? \"active\" : \"\"}`}\n          style={{ height: document.documentElement.clientHeight }}\n        >\n          {fetchingLocation && (\n            <LoaderSkeleton height={`${window.innerHeight}px`} />\n          )}\n          <Messages />\n          <MessageForm />\n        </div>\n      </div>\n    </ChatContext.Provider>\n  );\n};\n\nexport default withRouter(Chat);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Join from \"./pages/join\";\nimport Chat from \"./pages/chat\";\nimport \"../src/assets/styles/_grid.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      site_loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      site_loaded: true,\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className={classNames({\n          App: true,\n          site_loaded: this.state.site_loaded,\n        })}\n      >\n        <Router>\n          <Switch>\n            <Route path=\"/chat/:username/:room\" component={Chat} />\n            <Route path=\"/\" component={Join} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}